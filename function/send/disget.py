import requests
from datetime import datetime
from dotenv import load_dotenv
import os
from function.get import get_full_info  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ get_device_info ‡∏à‡∏≤‡∏Å get.py

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å get_full_info
device_info = get_full_info()

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()

# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ Webhook URL ‡∏à‡∏≤‡∏Å .env
DISCORD_WEBHOOK_URL = os.getenv("DISCORD_WEBHOOK")


# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord ‡∏î‡πâ‡∏ß‡∏¢ Embed
def smdc(message, embed=None):
    data = {
        "content": message,  # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á
        "embeds": [embed] if embed else []  # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ Embed ‡∏Å‡πá‡∏à‡∏∞‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ô‡∏µ‡πâ
    }
    try:
        response = requests.post(DISCORD_WEBHOOK_URL, json=data)
        if response.status_code == 204:  # 204 ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            print("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏ó‡∏µ‡πà Discord ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ")
        else:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {response.status_code} ‚ùå")
            print(response.text)
    except requests.RequestException as e:
        print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: {e} ‚ùå")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
def get_current_time():
    now = datetime.now()
    return now.strftime("%d-%m-%Y %H:%M:%S")  # ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤: DD-MM-YYYY HH:mm:ss

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
def send(username):
    current_time = get_current_time()  # ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    message = f"üéâ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {username} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ\nüïí ‡πÄ‡∏ß‡∏•‡∏≤: {current_time}"

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
    embed = {
        "title": f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {username}",
        "description": "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö",
        "color": 0x00FF00,  # ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á Embed (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß)
        "fields": [
            {"name": "üìç IP", "value": device_info['IP'], "inline": False},
            {"name": "üåè ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á", "value": f"{device_info['Location']['city']}, {device_info['Location']['region']}, {device_info['Location']['country']}", "inline": False},
            {"name": "üíª ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£", "value": f"{device_info['Device']['os']} {device_info['Device']['os_version']}", "inline": False},
            {"name": "üîß CPU", "value": f"{device_info['Device']['processor']} ({device_info['Device']['cpu_count']} cores)", "inline": False},
            {"name": "üîã ‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà", "value": device_info['Battery'], "inline": False},
            {"name": "üñ•Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠", "value": device_info['Screen Resolution'], "inline": False},
            {"name": "üíæ RAM", "value": f"{device_info['Device']['memory']} (Used: {device_info['Memory']['used']} GB, Free: {device_info['Memory']['free']} GB, Usage: {device_info['Memory']['percent']}%)", "inline": False},
            {"name": "üåê ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢", "value": device_info['Network'], "inline": False},
            {"name": "üíª GPU", "value": device_info['GPU2'], "inline": False},
            {"name": "üíæ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏î‡∏¥‡∏™‡∏Å‡πå", "value": device_info['Disk Usage2'], "inline": False}
        ],
        "footer": {
            "text": f"‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤: {current_time}"
        }
    }

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞ Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord
    smdc(message, embed)


# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
# send(username)